{"version":3,"file":"bundle.js","sources":["../src/obtenerGenero.js","../src/fetchPopulares.js","../src/cargarTitulos.js","../src/index.js"],"sourcesContent":["const obtenerGenero= (id, generos)=>{\r\n    let nombre;\r\n\r\n    generos.forEach((elementoG)=>{\r\n        console.log(elementoG);\r\n    });\r\n};\r\nexport default obtenerGenero;","import fetchGeneros from './fetchGeneros';\r\nimport obtenerGenero from './obtenerGenero';\r\n\r\n\r\nconst fetchPopulares= async()=>{\r\n   const url =\r\n   'https://api.themoviedb.org/3/discover/movie?api_key=83243bb30b64a34797e84b2dded59fac&include_adult=false&include_video=false&language=en-US&page=1&sort_by=popularity.desc';\r\n   \r\n   try{ //intenta hacer una peticion y luego que extraiga los datos y si todo es correcto los vamos a devolver\r\n      const respuesta= await fetch(url); //fetch hace la peticion al servidor\r\n      const datos= await respuesta.json(); //json tae los datos. Datos va almacenar los datos de la respuesta de json\r\n      const resultados00= datos.results; //Resultados me trae los elementos almacenos los resultados en una variable\r\n      //const generos= await fetchGeneros();\r\n      resultados00.forEach((elementos) => { //como los datos e sun arreglo los vamos a recorresr con un foreach\r\n        obtenerGenero()\r\n      });\r\n\r\n      return resultados00; //respuesta.json() a acceder a las peliculas, la informacion. Trabajamos con AWAIT YA QUE LOS DATOS SON ASINCRONOS \r\n      \r\n   }catch(error){//atrapa el error si existe un problema\r\n      console.log(error);\r\n}\r\n   \r\n};\r\n\r\nexport default fetchPopulares;","const cargarTitulos= (resultados)=>{\r\n   const contenedor= document.querySelector('#populares .main__grid'); //#: id\r\n  \r\n    resultados.forEach((resultado)=> {\r\n        const plantilla = `\r\n    <div class=\"main__media\">\r\n        <a href=\"#\" class=\"main__media-thumb\">\r\n            <img class=\"main__media-img\" src=\"https://image.tmdb.org/t/p/w500/${resultado.poster_path}\" alt=\"\" />\r\n        </a>\r\n        <p class=\"main__media-titulo\">${resultado.title}</p>\r\n        <p class=\"main__media-fecha\">2021</p>\r\n    </div>`;\r\n        contenedor.insertAdjacentHTML('beforeend', plantilla); //insertamos la plantilla dentro del contenedor  \r\n    }); //beforeend; la ubicamos andes del final, \r\n\r\n};\r\n\r\nexport default cargarTitulos;","import fetchPopulares from './fetchPopulares';\r\nimport cargarTitulos from './cargarTitulos';\r\n\r\n\r\nconst cargar = async()=>{\r\n    const resultados=await fetchPopulares();\r\n    cargarTitulos(resultados);\r\n};\r\ncargar();\r\n"],"names":[],"mappings":";;AAAA,MAAM,aAAa,EAAE,CAAC,EAAE,EAAE,OAAO,GAAG;AAEpC;AACA,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC,SAAS,GAAG;AACjC,QAAQ,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC/B,KAAK,CAAC,CAAC;AACP,CAAC;;ACFD,MAAM,cAAc,EAAE,SAAS;AAC/B,GAAG,MAAM,GAAG;AACZ,GAAG,4KAA4K,CAAC;AAChL;AACA,GAAG,GAAG;AACN,MAAM,MAAM,SAAS,EAAE,MAAM,KAAK,CAAC,GAAG,CAAC,CAAC;AACxC,MAAM,MAAM,KAAK,EAAE,MAAM,SAAS,CAAC,IAAI,EAAE,CAAC;AAC1C,MAAM,MAAM,YAAY,EAAE,KAAK,CAAC,OAAO,CAAC;AACxC;AACA,MAAM,YAAY,CAAC,OAAO,CAAC,CAAC,SAAS,KAAK;AAC1C,QAAQ,aAAa,GAAE;AACvB,OAAO,CAAC,CAAC;AACT;AACA,MAAM,OAAO,YAAY,CAAC;AAC1B;AACA,IAAI,MAAM,KAAK,CAAC;AAChB,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;AACzB,CAAC;AACD;AACA,CAAC;;ACvBD,MAAM,aAAa,EAAE,CAAC,UAAU,GAAG;AACnC,GAAG,MAAM,UAAU,EAAE,QAAQ,CAAC,aAAa,CAAC,wBAAwB,CAAC,CAAC;AACtE;AACA,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC,SAAS,IAAI;AACrC,QAAQ,MAAM,SAAS,GAAG,CAAC;AAC3B;AACA;AACA,8EAA8E,EAAE,SAAS,CAAC,WAAW,CAAC;AACtG;AACA,sCAAsC,EAAE,SAAS,CAAC,KAAK,CAAC;AACxD;AACA,UAAU,CAAC,CAAC;AACZ,QAAQ,UAAU,CAAC,kBAAkB,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAC9D,KAAK,CAAC,CAAC;AACP;AACA,CAAC;;ACXD,MAAM,MAAM,GAAG,SAAS;AACxB,IAAI,MAAM,UAAU,CAAC,MAAM,cAAc,EAAE,CAAC;AAC5C,IAAI,aAAa,CAAC,UAAU,CAAC,CAAC;AAC9B,CAAC,CAAC;AACF,MAAM,EAAE;;"}